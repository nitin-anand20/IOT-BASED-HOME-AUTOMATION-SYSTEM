#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

// ===== WiFi Credentials =====
const char* ssid = "YOUR_WIFI_SSID";        // <-- change this
const char* password = "YOUR_WIFI_PASSWORD"; // <-- change this

// ===== Relay Pins =====
#define RELAY1 D1
#define RELAY2 D2
#define RELAY3 D3
#define RELAY4 D4

ESP8266WebServer server(80);

// Get relay state (active LOW module)
String relayState(int pin) {
  return (digitalRead(pin) == LOW) ? "ON" : "OFF";
}

// Webpage UI
void handleRoot() {
  String html = "<!DOCTYPE html><html><head><meta name='viewport' content='width=device-width,initial-scale=1'>";
  html += "<title>Home Automation</title>";
  html += "<style>body{font-family:Arial;text-align:center;}button{padding:12px;margin:6px;font-size:18px;}</style></head><body>";
  html += "<h2>ESP8266 Home Automation</h2>";

  for (int i = 1; i <= 4; i++) {
    int pin = (i==1?RELAY1:(i==2?RELAY2:(i==3?RELAY3:RELAY4)));
    html += "<p>Relay " + String(i) + " is <b>" + relayState(pin) + "</b></p>";
    html += "<a href='/toggle?r=" + String(i) + "'><button>Toggle Relay " + String(i) + "</button></a><br>";
  }

  html += "</body></html>";
  server.send(200, "text/html", html);
}

// Toggle relay
void handleToggle() {
  if (!server.hasArg("r")) {
    server.send(400, "text/plain", "Missing parameter");
    return;
  }
  int r = server.arg("r").toInt();
  int pin = (r==1?RELAY1:(r==2?RELAY2:(r==3?RELAY3:RELAY4)));

  digitalWrite(pin, !digitalRead(pin)); // Toggle state
  handleRoot(); // Reload updated page
}

void setup() {
  Serial.begin(115200);

  // Setup relay pins
  pinMode(RELAY1, OUTPUT);
  pinMode(RELAY2, OUTPUT);
  pinMode(RELAY3, OUTPUT);
  pinMode(RELAY4, OUTPUT);

  // Turn OFF initially (HIGH = off for active LOW relays)
  digitalWrite(RELAY1, HIGH);
  digitalWrite(RELAY2, HIGH);
  digitalWrite(RELAY3, HIGH);
  digitalWrite(RELAY4, HIGH);

  // Connect WiFi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  // Routes
  server.on("/", handleRoot);
  server.on("/toggle", handleToggle);
  server.begin();
  Serial.println("HTTP server started");
}

void loop() {
  server.handleClient();
}
